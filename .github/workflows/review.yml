name: CI
on:
  workflow_dispatch:

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: id
        id: id
        uses: actions/github-script@v7
        with:
          script: |
            const list = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ github.ref }}',
              check_name: 'review',
              filter: 'latest'
            });
            const id = list.data.check_runs[0].id;
            github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: id,
              status: 'in_progress'
            })
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: lint
        run: exit 0
  iOS15:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install simulators
        run: |
          rm -rf /Applications/Xcode_16.1_beta.app
          rm -rf /Applications/Xcode_16_beta_6.app
          rm -rf /Applications/Xcode_15.4.app
          rm -rf /Applications/Xcode_15.2.app
          rm -rf /Applications/Xcode_15.1.app
          rm -rf /Applications/Xcode_15.0.1.app
          rm -rf /Applications/Xcode_14.3.1.app
          sudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer
          sudo xcodes runtimes install "iOS 15.0"
          # xcodebuild -runFirstLaunch
          # ls ~/Downloads | grep 15
          # echo "ADDDDDDDD"
          # xcrun simctl runtime add "~/Downloads/com.apple.pkg.iPhoneSimulatorSDK15_0-15.0.1.1633542405.dmg"
      - name: ut
        run: xcodebuild -workspace GitHubActions.xcworkspace -scheme GitHubActionsTests -destination 'platform=iOS Simulator,name=iPhone SE (2nd generation),OS=15.0' test
  update:
    runs-on: ubuntu-latest
    needs: [start, lint, iOS15]
    steps:
      - name: update
        uses: actions/github-script@v7
        with:
          script: |
            const list = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ github.ref }}',
              check_name: 'review',
              filter: 'latest'
            });
            const id = list.data.check_runs[0].id;
            github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: id,
              status: 'completed',
              conclusion: ${{ needs.lint.result == 'success' }} && ${{ needs.iOS15.result == 'success' }} ? 'success' : 'failure'
            })
    