name: CI
on:
  workflow_dispatch:
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      check_run_id: ${{ steps.setup.outputs.check_run_id }}
    steps:
      - name: Set Up
        id: setup
        uses: actions/github-script@v7
        with:
          script: |
            const list = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ github.ref }}',
              check_name: 'review',
              filter: 'latest'
            });
            const check_run_id = list.data.check_runs[0].id;
            github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: check_run_id,
              status: 'in_progress'
            })
            echo "check_run_id=$check_run_id" >> "$GITHUB_OUTPUT"
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        run: exit 0
  ut:
    runs-on: macos-14
    strategy:
      matrix:
        iOS: ["15.0", "16.0", "17.5"]
    steps:
      - name: Delete Xcodes
        run: |
          rm -rf /Applications/Xcode_16.1_beta.app \
                 /Applications/Xcode_16_beta_6.app \
                 /Applications/Xcode_15.4.app \
                 /Applications/Xcode_15.2.app \
                 /Applications/Xcode_15.1.app \
                 /Applications/Xcode_15.0.1.app \
                 /Applications/Xcode_14.3.1.app
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer
      - name: Install simulators
        if: ${{ matrix.iOS != '17.5' }}
        run: sudo xcodes runtimes install "iOS ${{ matrix.iOS }}"
      - name: Checkout
        uses: actions/checkout@v4
      - name: UT
        run: |
          if [ ${{ matrix.iOS }} = "15.0" ]; then
            device="iPhone 13 Pro Max"
          else
            device="iPhone 14 Pro"
          fi
          xcodebuild -workspace GitHubActions.xcworkspace -scheme GitHubActionsTests -destination "platform=iOS Simulator,name=$device,OS=15.0" test
  completed:
    runs-on: ubuntu-latest
    if: always()
    needs: [setup, lint, ut]
    steps:
      - name: Completed
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ needs.setup.outputs.check_run_id }},
              status: 'completed',
              conclusion: ${{ needs.lint.result == 'success' }} && ${{ needs.iOS15.result == 'success' }} ? 'success' : 'failure'
            })
    