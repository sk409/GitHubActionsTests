name: CI
on:
  pull_request:
    types: [synchronize]
  workflow_dispatch:

jobs:
  queue:
    if: github.event_name == 'pull_request'
    name: queue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'review',
              head_sha: '${{ github.event.pull_request.head.sha }}',
              status: 'queued'
            })
  workflow_dispatch:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: something test1
        id: ut
        run: exit 0
      # - uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const list = await github.rest.checks.listForRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: 'feature/pr7',
      #         check_name: 'review',
      #         filter: 'latest'
      #       });
      #       const id = list.data.check_runs[0].id;
      #       github.rest.checks.update({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         check_run_id: id
      #       })
      - name: Return issues
        uses: actions/github-script@v2
        id: get-staging-test-check-runs-id
        with:
          script: |
            // github-scriptでnameがstaging-testのCheck RunsのIDの一覧を新順で取得する
            const list = await github.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'feature/pr7',
                check_name: 'review',
                filter: 'latest'
            });
            return list.data.check_runs[0].id;
          result-encoding: string
      # repository_dispatchの結果を最新のCheck Runsに反映する
      - uses: LouisBrunner/checks-action@v1.1.1
        # if: github.event_name == 'repository_dispatch'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{steps.get-staging-test-check-runs-id.outputs.result}}
          status: completed
          # successならばsuccessにし、それ以外はfailureにする
          conclusion: success
